{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["getDate","Date","toUTCString","slice","Clock","state","date","timer","this","window","setInterval","setState","prevProps","prevState","name","props","console","debug","info","clearInterval","className","Component","getRandomName","value","now","toString","App","clockName","hasClock","timerId","handleClockVisibleFalse","event","preventDefault","handleClockVisibleTrue","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"qMAEA,SAASA,IAGP,OAFc,IAAIC,MAELC,cAAcC,OAAO,IAAK,GAWlC,IAAMC,EAAb,4MACEC,MAAyB,CACvBC,KAAMN,KAFV,EAKEO,MAAQ,EALV,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,MAAQE,OAAOC,aAAY,WAC9B,EAAKC,SAAS,CAAEL,KAAMN,QACrB,OAVP,gCAaE,SAAmBY,EAAkBC,GAC/BD,EAAUE,OAASN,KAAKO,MAAMD,MAEhCE,QAAQC,MAAR,uBAA8BL,EAAUE,KAAxC,eAAmDN,KAAKO,MAAMD,OAG5DD,EAAUP,OAASE,KAAKH,MAAMC,MAEhCU,QAAQE,KAAKV,KAAKH,MAAMC,QArB9B,kCAyBE,WACEG,OAAOU,cAAcX,KAAKD,SA1B9B,oBA6BE,WACE,IAAQD,EAASE,KAAKH,MAAdC,KACAQ,EAASN,KAAKO,MAAdD,KAER,OACE,sBAAKM,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGN,IAGF,YAED,sBAAMM,UAAU,cAAhB,SACGd,WA1CX,GAA2Be,a,MCV3B,SAASC,IACP,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GASX,IAAMG,EAAb,4MACErB,MAAyB,CACvBsB,UAAW,UACXC,UAAU,GAHd,EAMEC,QAAU,EANZ,EAwBEC,wBAA0B,SAACC,GACzBA,EAAMC,iBACN,EAAKrB,SAAS,CAAEiB,UAAU,KA1B9B,EA6BEK,uBAAyB,SAACF,GACxBA,EAAMC,iBACN,EAAKrB,SAAS,CAAEiB,UAAU,KA/B9B,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAe3B,KAAKsB,yBAC9CI,SAASC,iBAAiB,QAAS3B,KAAKyB,wBAExCzB,KAAKqB,QAAUpB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEgB,UAAWL,QAC1B,QAdP,kCAiBE,WACEY,SAASE,oBAAoB,cAAe5B,KAAKsB,yBACjDI,SAASE,oBAAoB,QAAS5B,KAAKyB,wBAE3CxB,OAAOU,cAAcX,KAAKqB,WArB9B,oBAkCE,WACE,MAAgCrB,KAAKH,MAA7BsB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECQ,GAAY,cAAC,EAAD,CAAOd,KAAMa,WAzClC,GAAyBN,aCfzBgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.93baf467.chunk.js","sourcesContent":["import { Component } from 'react';\n\nfunction getDate(): string {\n  const value = new Date();\n\n  return value.toUTCString().slice(-12, -4);\n}\n\ntype State = {\n  date: string,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: getDate(),\n  };\n\n  timer = 0;\n\n  componentDidMount(): void {\n    this.timer = window.setInterval(() => {\n      this.setState({ date: getDate() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n\n    if (prevState.date !== this.state.date) {\n      // eslint-disable-next-line no-console\n      console.info(this.state.date);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timer);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\n\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n  // timerId: number,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleClockVisibleFalse);\n    document.addEventListener('click', this.handleClockVisibleTrue);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleClockVisibleFalse);\n    document.removeEventListener('click', this.handleClockVisibleTrue);\n\n    window.clearInterval(this.timerId);\n  }\n\n  handleClockVisibleFalse = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleClockVisibleTrue = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}